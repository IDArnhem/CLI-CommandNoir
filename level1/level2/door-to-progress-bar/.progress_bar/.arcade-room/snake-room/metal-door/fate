#!/usr/bin/env python
"""
Fate & Fortune SMS.

Usage:
  fate <your_mobile_number> [--password=<pwd>]
  fate -h | --help

  The only parameter is your phone number preceded by the international
  dialing code +31 for the Netherlands.

Options:
  -h --help              Show this screen.
  -p --password=<pw>     Provide password.
"""
from twilio.rest import Client
from docopt import docopt
import json
from SimpleAES import SimpleAES  # military-grade bollocks!
import getpass

secret = """U2FsdGVkX1/x279RLQGfXryW2TiS01Mhlf7A2B7QoHQ1HSZd0IlBKbUaC4D9Pd8p\nJuHOKlM03ofoMQLTtxi50zO6wnRFASFA6DZ2J0e8llVk1uIi7A5MVprM5qblXCI4\nhHbr47inbe73zesmc+/n2MYcNSTLahegtdS+hSu8wM4="""

def decrypt_secret(passphrase="Haven't got a clue"):
    try:
        aes = SimpleAES(passphrase)
        dekret = aes.decrypt(secret)
        return json.loads(dekret)
    except Exception as e:
        print "(!!!) Damn! That was not the right password! Quick! Let's not waste precious time! Try again."

def send_sms_to(mobile, sid, token):
    try:
        client = Client(sid, token)
        myTwilioNumber = '+31852080387'
        msgtext = "Give up or you'll never eat Whiskas again! Quit your quest! The .server-room is hidden"
        print "Sending now an sms to", mobile
        message = client.messages.create(body=msgtext, from_=myTwilioNumber, to=mobile)
    except Exception, e:
        print
        print "Sending of the SMS failed, probably Luis doesn't have any credit left in his SMS account"
        print
        print "This is what the SMS said:"
        print
        print msgtext
        print
        print "="*77

if __name__ == '__main__':
    arguments = docopt(__doc__, version='Fate')
    #print(arguments)

    if ('--password' in arguments) and (arguments['--password']):
        pw = arguments['--password']
    else:
        pw = getpass.getpass(prompt='Enter the shared secret: ')

    cred = decrypt_secret(pw)

    if cred and ('<your_mobile_number>' in arguments):
        send_sms_to(arguments['<your_mobile_number>'], cred['accountSID'], cred['authToken'])
